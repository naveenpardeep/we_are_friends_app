//This is autogenerated file. All changes will be lost after code generation.
import 'package:nsg_data/nsg_data.dart';
// ignore: unused_import
import 'dart:typed_data';
import '../data_controller_model.dart';
class PaymentGenerated extends NsgDataItem {
  static const nameId = 'id';
  static const nameDate = 'date';
  static const nameComment = 'comment';
  static const nameFriendId = 'friendId';
  static const nameEventId = 'eventId';
  static const nameSum = 'sum';
  static const namePhotoTable = 'photoTable';

  static final Map<String, String> fieldNameDict = {
   nameFriendId: 'Друг',
   nameEventId: 'Мероприятие',
 };

  @override
  String get typeName => 'Payment';

  @override
  void initialize() {
    addField(NsgDataStringField(nameId), primaryKey: true);
    addField(NsgDataDateField(nameDate), primaryKey: false);
    addField(NsgDataStringField(nameComment, maxLength: 0), primaryKey: false);
    addField(NsgDataReferenceField<Friend>(nameFriendId), primaryKey: false);
    addField(NsgDataReferenceField<Event>(nameEventId), primaryKey: false);
    addField(NsgDataDoubleField(nameSum), primaryKey: false);
    addField(NsgDataReferenceListField<PaymentPhotoTable>(namePhotoTable), primaryKey: false);
    fieldList.fields[nameFriendId]?.presentation = 'Друг';
    fieldList.fields[nameEventId]?.presentation = 'Мероприятие';
  }

  @override
  NsgDataItem getNewObject() => Payment();

  /// Идентификатор
  @override
  String get id => getFieldValue(nameId).toString();

  @override
  set id(String value) => setFieldValue(nameId, value);

  /// Дата
  DateTime get date => getFieldValue(nameDate) as DateTime;

  set date(DateTime value) => setFieldValue(nameDate, value);

  /// Комментарий
  String get comment => getFieldValue(nameComment).toString();

  set comment(String value) => setFieldValue(nameComment, value);

  String get friendId => getFieldValue(nameFriendId).toString();
  Friend get friend => getReferent<Friend>(nameFriendId);
  Future<Friend> friendAsync() async {
   return await getReferentAsync<Friend>(nameFriendId);
  }

  set friendId(String value) => setFieldValue(nameFriendId, value);
  set friend(Friend value) =>
    setFieldValue(nameFriendId, value.id);

  String get eventId => getFieldValue(nameEventId).toString();
  Event get event => getReferent<Event>(nameEventId);
  Future<Event> eventAsync() async {
   return await getReferentAsync<Event>(nameEventId);
  }

  set eventId(String value) => setFieldValue(nameEventId, value);
  set event(Event value) =>
    setFieldValue(nameEventId, value.id);

  /// Сумма
  double get sum => getFieldValue(nameSum) as double;

  set sum(double value) => setFieldValue(nameSum, value);

  NsgDataTable<PaymentPhotoTable> get photoTable => NsgDataTable<PaymentPhotoTable>(owner: this, fieldName: namePhotoTable);


  @override
  String get apiRequestItems {
    return '/Api/Payment';
  }
}
